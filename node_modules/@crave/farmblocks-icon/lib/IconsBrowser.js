"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.Pre = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _farmblocksTheme = require("@crave/farmblocks-theme");

var _farmblocksText = _interopRequireWildcard(require("@crave/farmblocks-text"));

var icons = _interopRequireWildcard(require("./jsx"));

var _sizes = require("../sizes");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Pre = _styledComponents["default"].pre.withConfig({
  displayName: "IconsBrowser__Pre",
  componentId: "sc-1wvl3bv-0"
})(["display:inline-block;font-size:1rem;background:aliceblue;color:darkslateblue;margin:0;padding:4px;"]);

exports.Pre = Pre;

var Grid = _styledComponents["default"].div.withConfig({
  displayName: "IconsBrowser__Grid",
  componentId: "sc-1wvl3bv-1"
})(["display:grid;grid:auto-flow min-content / repeat(auto-fill,minmax(180px,1fr));grid-gap:8px;padding:8px;background:", ";"], _farmblocksTheme.colors.SUGAR);

var GroupHeader = (0, _styledComponents["default"])(_farmblocksText["default"]).withConfig({
  displayName: "IconsBrowser__GroupHeader",
  componentId: "sc-1wvl3bv-2"
})(["grid-column-start:1;grid-column-end:-1;align-self:end;background:white;margin-top:1em;padding:8px;position:sticky;top:0;border:solid ", ";border-width:8px 0;"], _farmblocksTheme.colors.SUGAR);

var Item = _styledComponents["default"].div.withConfig({
  displayName: "IconsBrowser__Item",
  componentId: "sc-1wvl3bv-3"
})(["display:flex;flex-direction:column;min-height:180px;padding:8px;align-items:center;background:white;color:", ";"], _farmblocksTheme.colors.CARBON);

var IconCanvas = _styledComponents["default"].div.withConfig({
  displayName: "IconsBrowser__IconCanvas",
  componentId: "sc-1wvl3bv-4"
})(["flex:1;display:flex;align-items:center;justify-content:center;svg.farmblocks-icon{background:#fafafa url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"400\"         fill-opacity=\".05\" ><rect x=\"200\" width=\"200\" height=\"200\" /><rect y=\"200\" width=\"200\" height=\"200\" /></svg>');background-size:32px 32px;background-position:center;border:1px solid #ddd;}"]);

var grouped = Object.keys(icons).reduce(function (acc, iconName) {
  var Icon = icons[iconName];
  return _objectSpread({}, acc || {}, _defineProperty({}, Icon.groupName, [].concat(_toConsumableArray(acc[Icon.groupName] || []), [{
    name: iconName,
    size: _sizes.croppedSizes[iconName.substr(0, 2)]
  }])));
}, {});
var groupNames = Object.keys(grouped).sort();

var _default = function _default() {
  return _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_farmblocksText["default"], {
    size: _farmblocksText.fontSizes.HUGE
  }, "Farmblocks Icons"), _react["default"].createElement(_farmblocksText["default"], null, "Use the names bellow the icons to import it.", _react["default"].createElement("br", null), "Example:", " ", _react["default"].createElement(Pre, null, "import { SmPlaceholder } from '@crave/farmblocks-icon';")), _react["default"].createElement("hr", null), _react["default"].createElement(Grid, null, groupNames.map(function (groupName) {
    return _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(GroupHeader, {
      size: _farmblocksText.fontSizes.X_LARGE,
      key: groupName
    }, groupName), grouped[groupName].map(function (_ref) {
      var name = _ref.name,
          size = _ref.size;
      var Icon = icons[name];
      return _react["default"].createElement(Item, {
        key: name
      }, _react["default"].createElement(IconCanvas, null, _react["default"].createElement(Icon, {
        size: size,
        "aria-label": name
      })), _react["default"].createElement(_farmblocksText["default"], {
        size: _farmblocksText.fontSizes.SMALL
      }, name));
    }));
  })));
};

exports["default"] = _default;