"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _colorTypes = _interopRequireDefault(require("../constants/colorTypes"));

var _buttonSizes = require("../constants/buttonSizes");

var _buttonTypes = require("../constants/buttonTypes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var buttonHeight = function buttonHeight(_ref) {
  var size = _ref.size;
  return size === _buttonSizes.MEDIUM ? 48 : 32;
};

var lineHeight = function lineHeight(props) {
  return buttonHeight(props) - 2;
};

var paddingStyle = function paddingStyle(_ref2) {
  var isIconOnly = _ref2.isIconOnly,
      paddingX = _ref2.paddingX;

  if (paddingX) {
    return (0, _styledComponents.css)(["padding:0 ", ";"], paddingX);
  }

  return (0, _styledComponents.css)(["padding:0 ", ";"], isIconOnly ? "0" : "16px");
};

function neutralStyle(props) {
  var _props$theme$NEUTRAL = props.theme[_buttonTypes.NEUTRAL],
      textColor = _props$theme$NEUTRAL.textColor,
      iconColor = _props$theme$NEUTRAL.iconColor,
      textHoverColor = _props$theme$NEUTRAL.textHoverColor,
      color = _props$theme$NEUTRAL.color;
  var activatedNeutralStyle = (0, _styledComponents.css)(["color:", ";border-color:", ";> .icon{color:", ";}"], textHoverColor, textHoverColor, textHoverColor);
  return (0, _styledComponents.css)(["background-color:", ";color:", ";> .icon{color:", ";}", ";&:hover,&:focus{", ";}"], color, props.textColor || textColor, iconColor, function (_ref3) {
    var activated = _ref3.activated;
    return activated && activatedNeutralStyle;
  }, activatedNeutralStyle);
}

function typeStyle(props) {
  var theme = _objectSpread({}, _colorTypes["default"], {}, props.theme);

  if (props.type === _buttonTypes.NEUTRAL) {
    return neutralStyle(_objectSpread({}, props, {
      theme: theme
    }));
  }

  var _theme$props$type = theme[props.type],
      color = _theme$props$type.color,
      hoverColor = _theme$props$type.hoverColor;
  return (0, _styledComponents.css)(["transition:background 0.3s ease;background-color:", ";&:hover{background-color:", ";}&:focus{background-color:", ";}"], color, hoverColor, hoverColor);
}

function loadingStyle(props) {
  return props.isLoading && (0, _styledComponents.css)(["> .icon.left-icon i::before{display:inline-block;animation:spin 1.1s infinite linear;@keyframes spin{0%{transform:rotate(0deg);}100%{transform:rotate(360deg);}}}"]);
}

var Button = _styledComponents["default"].button.withConfig({
  displayName: "Button",
  componentId: "sc-162w2p3-0"
})(["display:flex;align-items:center;justify-content:center;min-height:", "px;min-width:", "px;box-sizing:border-box;border:solid 1px rgba(0,0,0,0.16);border-radius:4px;box-shadow:", ";color:", ";line-height:", "px;font-size:16px;font-family:lato,sans-serif;font-weight:600;-webkit-font-smoothing:antialiased !important;white-space:nowrap;text-overflow:ellipsis;outline:0;cursor:pointer;.icon{line-height:1;color:rgba(255,255,255,0.56);align-self:center;font-size:", ";}&:hover{box-shadow:", ";}&:focus{box-shadow:none;}&:hover .icon,&:focus .icon{color:white;}width:", ";", ";", ";", ";font-size:", ";font-weight:", ";&:disabled,&:disabled .icon,&:disabled:hover{color:rgba(0,0,0,0.32);}&:disabled{background-color:#ccc;box-shadow:none;}"], buttonHeight, buttonHeight, function (props) {
  return props.boxShadow || "0 2px 2px 0 rgba(0, 0, 0, 0.16)";
}, function (_ref4) {
  var textColor = _ref4.textColor;
  return textColor || "white";
}, lineHeight, function (_ref5) {
  var size = _ref5.size;
  return size === _buttonSizes.MEDIUM ? "1.4em" : "1em";
}, function (props) {
  return props.boxShadow || "0 4px 4px 0 rgba(0, 0, 0, 0.16)";
}, function (props) {
  return props.fluid && "100%";
}, loadingStyle, typeStyle, paddingStyle, function (_ref6) {
  var fontSize = _ref6.fontSize;
  return fontSize && fontSize;
}, function (_ref7) {
  var fontWeight = _ref7.fontWeight;
  return fontWeight && fontWeight;
});

Button.displayName = "StyledButton";
Button.defaultProps = {
  theme: {}
};
var _default = Button;
exports["default"] = _default;