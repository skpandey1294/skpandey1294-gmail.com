{"ast":null,"code":"module.exports = function createTapListener(el, callback, useCapture) {\n  var startX = 0;\n  var startY = 0;\n  var touchStarted = false;\n  var touchMoved = false; // Assume that if a touchstart event initiates, the user is\n  // using touch and click events should be ignored.\n  // If this isn't done, touch-clicks will fire the callback\n  // twice: once on touchend, once on the subsequent \"click\".\n\n  var usingTouch = false;\n  el.addEventListener('click', handleClick, useCapture);\n  el.addEventListener('touchstart', handleTouchstart, useCapture);\n\n  function handleClick(e) {\n    if (usingTouch) return;\n    callback(e);\n  }\n\n  function handleTouchstart(e) {\n    usingTouch = true;\n    if (touchStarted) return;\n    touchStarted = true;\n    el.addEventListener('touchmove', handleTouchmove, useCapture);\n    el.addEventListener('touchend', handleTouchend, useCapture);\n    el.addEventListener('touchcancel', handleTouchcancel, useCapture);\n    touchMoved = false;\n    startX = e.touches[0].clientX;\n    startY = e.touches[0].clientY;\n  }\n\n  function handleTouchmove(e) {\n    if (touchMoved) return;\n    if (Math.abs(e.touches[0].clientX - startX) <= 10 && Math.abs(e.touches[0].clientY - startY) <= 10) return;\n    touchMoved = true;\n  }\n\n  function handleTouchend(e) {\n    touchStarted = false;\n    removeSecondaryTouchListeners();\n\n    if (!touchMoved) {\n      callback(e);\n    }\n  }\n\n  function handleTouchcancel() {\n    touchStarted = false;\n    touchMoved = false;\n    startX = 0;\n    startY = 0;\n  }\n\n  function removeSecondaryTouchListeners() {\n    el.removeEventListener('touchmove', handleTouchmove, useCapture);\n    el.removeEventListener('touchend', handleTouchend, useCapture);\n    el.removeEventListener('touchcancel', handleTouchcancel, useCapture);\n  }\n\n  function removeTapListener() {\n    el.removeEventListener('click', handleClick, useCapture);\n    el.removeEventListener('touchstart', handleTouchstart, useCapture);\n    removeSecondaryTouchListeners();\n  }\n\n  return {\n    remove: removeTapListener\n  };\n};","map":{"version":3,"sources":["/home/skpandey1294/Desktop/oca/node_modules/teeny-tap/index.js"],"names":["module","exports","createTapListener","el","callback","useCapture","startX","startY","touchStarted","touchMoved","usingTouch","addEventListener","handleClick","handleTouchstart","e","handleTouchmove","handleTouchend","handleTouchcancel","touches","clientX","clientY","Math","abs","removeSecondaryTouchListeners","removeEventListener","removeTapListener","remove"],"mappings":"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","sourcesContent":["module.exports = function createTapListener(el, callback, useCapture) {\n  var startX = 0;\n  var startY = 0;\n  var touchStarted = false;\n  var touchMoved = false;\n  // Assume that if a touchstart event initiates, the user is\n  // using touch and click events should be ignored.\n  // If this isn't done, touch-clicks will fire the callback\n  // twice: once on touchend, once on the subsequent \"click\".\n  var usingTouch = false;\n\n  el.addEventListener('click', handleClick, useCapture);\n  el.addEventListener('touchstart', handleTouchstart, useCapture);\n\n  function handleClick(e) {\n    if (usingTouch) return;\n    callback(e);\n  }\n\n  function handleTouchstart(e) {\n    usingTouch = true;\n\n    if (touchStarted) return;\n    touchStarted = true;\n\n    el.addEventListener('touchmove', handleTouchmove, useCapture);\n    el.addEventListener('touchend', handleTouchend, useCapture);\n    el.addEventListener('touchcancel', handleTouchcancel, useCapture);\n\n    touchMoved = false;\n    startX = e.touches[0].clientX;\n    startY = e.touches[0].clientY;\n  }\n\n  function handleTouchmove(e) {\n    if (touchMoved) return;\n\n    if (\n      Math.abs(e.touches[0].clientX - startX) <= 10\n      && Math.abs(e.touches[0].clientY - startY) <= 10\n    ) return;\n\n    touchMoved = true;\n  }\n\n  function handleTouchend(e) {\n    touchStarted = false;\n    removeSecondaryTouchListeners();\n    if (!touchMoved) {\n      callback(e);\n    }\n  }\n\n  function handleTouchcancel() {\n    touchStarted = false;\n    touchMoved = false;\n    startX = 0;\n    startY = 0;\n  }\n\n  function removeSecondaryTouchListeners() {\n    el.removeEventListener('touchmove', handleTouchmove, useCapture);\n    el.removeEventListener('touchend', handleTouchend, useCapture);\n    el.removeEventListener('touchcancel', handleTouchcancel, useCapture);\n  }\n\n  function removeTapListener() {\n    el.removeEventListener('click', handleClick, useCapture);\n    el.removeEventListener('touchstart', handleTouchstart, useCapture);\n    removeSecondaryTouchListeners();\n  }\n\n  return {\n    remove: removeTapListener,\n  };\n};\n"]},"metadata":{},"sourceType":"script"}